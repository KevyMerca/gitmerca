#!/bin/sh

# Custom Git command to stash changes, rebase, and pop stash

# Check if a target branch was provided
if [ $# -eq 1 ]; then
    target_branch=$1
else
    target_branch=""
fi

# Check if the target branch exists
branch_exists=false
if [ -n "$target_branch" ]; then
    if git show-ref --verify --quiet refs/heads/"$target_branch"; then
        branch_exists=true
    fi
fi

# Stash current changes
if git diff-index --quiet HEAD --; then
    echo "No changes to stash."
else
    git stash save "Auto-stash before rebase"
    stash_successful=true
fi

# Check if the current branch is develop
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$current_branch" = "develop" ]; then
    # Perform a simple rebase
    git rebase

    # If the target branch is provided, checkout or create it
    if [ "$branch_exists" = true ]; then
        git checkout "$target_branch"
    elif [ -n "$target_branch" ]; then
        git checkout -b "$target_branch"
    fi
else
    # Perform rebase with pull
    git pull origin develop --rebase
fi

# Pop the stash if it was successful
if [ "$stash_successful" = true ]; then
    git stash pop
fi
